(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{161:function(s,t,n){"use strict";n.r(t);var a=n(0),e=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#类","aria-hidden":"true"}},[s._v("#")]),s._v(" 类")]),n("h2",{attrs:{id:"js-构造函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#js-构造函数","aria-hidden":"true"}},[s._v("#")]),s._v(" JS 构造函数")]),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{attrs:{class:"token function"}},[s._v("Fn")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" y"),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{attrs:{class:"token keyword"}},[s._v("this")]),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("x "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" x\n  "),n("span",{attrs:{class:"token keyword"}},[s._v("this")]),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("y "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" y\n"),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\nFn"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function-variable function"}},[s._v("sum")]),s._v(" "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("this")]),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("x "),n("span",{attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("this")]),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("y\n"),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[s._v("const")]),s._v(" ins "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{attrs:{class:"token class-name"}},[s._v("Fn")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token number"}},[s._v("1")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{attrs:{class:"token number"}},[s._v("2")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nins"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function"}},[s._v("sum")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token comment"}},[s._v("// 3 ")]),s._v("\n")])]),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("常规的 JS 构造函数的一个显著特点是构造函数的定义与构造函数原型上的实例共有方法定义是"),n("strong",[s._v("分离")]),s._v("的。")]),n("h2",{attrs:{id:"class-api"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#class-api","aria-hidden":"true"}},[s._v("#")]),s._v(" class API")]),n("ul",[n("li",[s._v("class 语法")])]),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{attrs:{class:"token function"}},[s._v("constructor")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" age"),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{attrs:{class:"token keyword"}},[s._v("this")]),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" name\n    "),n("span",{attrs:{class:"token keyword"}},[s._v("this")]),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("age "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" age\n  "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{attrs:{class:"token comment"}},[s._v("// 等价于 Person.prototype.name = function () {}")]),s._v("\n  "),n("span",{attrs:{class:"token function"}},[s._v("sayName")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function"}},[s._v("log")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[s._v("`My name is ")]),n("span",{attrs:{class:"token interpolation"}},[n("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("${")]),n("span",{attrs:{class:"token keyword"}},[s._v("this")]),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),n("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("}")])]),n("span",{attrs:{class:"token string"}},[s._v(".`")])]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("this")]),s._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{attrs:{class:"token function"}},[s._v("sayAge")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function"}},[s._v("log")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[s._v("`My age is ")]),n("span",{attrs:{class:"token interpolation"}},[n("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("${")]),n("span",{attrs:{class:"token keyword"}},[s._v("this")]),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("age"),n("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("}")])]),n("span",{attrs:{class:"token string"}},[s._v("`")])]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("this")]),s._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[s._v("const")]),s._v(" jane "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{attrs:{class:"token class-name"}},[s._v("Person")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token string"}},[s._v("'Jane'")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{attrs:{class:"token number"}},[s._v("20")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\njane"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function"}},[s._v("sayName")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token comment"}},[s._v('// "My name is Jane."')]),s._v("\njane"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function"}},[s._v("sayAge")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token comment"}},[s._v('// "My age is 20"')]),s._v("\n")])]),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br")])]),n("p",[s._v("JS 类中除 "),n("code",[s._v("constructor")]),s._v(" 和有前缀 "),n("code",[s._v("static")]),s._v(" 的方法外，定义的所有方法都是定义在"),n("strong",[s._v("类的原型对象")]),s._v("上的。")]),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" Person "),n("span",{attrs:{class:"token comment"}},[s._v('// "function"')]),s._v("\nPerson "),n("span",{attrs:{class:"token keyword"}},[s._v("instanceof")]),s._v(" "),n("span",{attrs:{class:"token class-name"}},[s._v("Function")]),s._v(" "),n("span",{attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n")])]),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("JS 中的类本质就是"),n("strong",[s._v("函数")]),s._v("。")]),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[s._v("Person "),n("span",{attrs:{class:"token operator"}},[s._v("===")]),s._v(" Person"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("constructor "),n("span",{attrs:{class:"token comment"}},[s._v("// true")]),s._v("\njane"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("__proto__ "),n("span",{attrs:{class:"token operator"}},[s._v("===")]),s._v(" Person"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype "),n("span",{attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n")])]),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[n("strong",[s._v("总结")]),s._v("：JS 中 "),n("code",[s._v("class")]),s._v(" 严格说是一种"),n("strong",[s._v("语法糖")]),s._v("，它封装了普通 JS 构造函数的创建（"),n("code",[s._v("constructor (val) {}")]),s._v("），原型对象方法和构造函数静态方法（"),n("code",[s._v("static")]),s._v("）的定义，原型链继承的实现（"),n("code",[s._v("extends")]),s._v("）等功能。")]),n("ul",[n("li",[s._v("class 继承")])]),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{attrs:{class:"token class-name"}},[s._v("FullPerson")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),n("span",{attrs:{class:"token class-name"}},[s._v("Person")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{attrs:{class:"token function"}},[s._v("constructor")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" age"),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" gender"),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{attrs:{class:"token comment"}},[s._v("// 子类必须调用 super() 以调用父类的 constructor(name, age)")]),s._v("\n    "),n("span",{attrs:{class:"token comment"}},[s._v("// 因为子类构造函数中的 this 是基于父类构造函数的 this 对象再加工的")]),s._v("\n    "),n("span",{attrs:{class:"token comment"}},[s._v("// super() 将返回父类构造函数 this 对象（即子类的实例）")]),s._v("\n    "),n("span",{attrs:{class:"token comment"}},[s._v("// super() 相当于 Person.prototype.constructor.call(this)")]),s._v("\n    "),n("span",{attrs:{class:"token keyword"}},[s._v("super")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" age"),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{attrs:{class:"token keyword"}},[s._v("this")]),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("gender "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" gender\n  "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{attrs:{class:"token function"}},[s._v("sayGender")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function"}},[s._v("log")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[s._v("`")]),n("span",{attrs:{class:"token interpolation"}},[n("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("${")]),n("span",{attrs:{class:"token keyword"}},[s._v("this")]),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),n("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("}")])]),n("span",{attrs:{class:"token string"}},[s._v(" is ")]),n("span",{attrs:{class:"token interpolation"}},[n("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("${")]),n("span",{attrs:{class:"token keyword"}},[s._v("this")]),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("gender"),n("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[s._v("}")])]),n("span",{attrs:{class:"token string"}},[s._v("`")])]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("this")]),s._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[s._v("const")]),s._v(" john "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{attrs:{class:"token class-name"}},[s._v("FullPerson")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token string"}},[s._v("'John'")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{attrs:{class:"token number"}},[s._v("20")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{attrs:{class:"token string"}},[s._v("'male'")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\njohn"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function"}},[s._v("sayName")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function"}},[s._v("sayAge")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function"}},[s._v("sayGender")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token comment"}},[s._v('// "My name is John." "My age is 20" "John is male"')]),s._v("\n")])]),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])]),n("p",[s._v("示例中，"),n("code",[s._v("FullPerson")]),s._v(" 继承了 "),n("code",[s._v("Person")]),s._v(" 的方法。")]),n("h2",{attrs:{id:"拓展：class-与普通-js-构造函数的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#拓展：class-与普通-js-构造函数的区别","aria-hidden":"true"}},[s._v("#")]),s._v(" 拓展：class 与普通 JS 构造函数的区别")]),n("ul",[n("li",[s._v("原型对象方法的定义")])]),n("p",[n("code",[s._v("class")]),s._v(" 中构造函数与原型对象的方法定义更为"),n("strong",[s._v("统一")]),s._v("，而普通 JS 构造函数与原型对象上的方法定义是"),n("strong",[s._v("分离")]),s._v("的。即 "),n("code",[s._v("class")]),s._v(" 定义的构造函数与原型方法更为"),n("strong",[s._v("简洁")]),s._v("。")]),n("ul",[n("li",[s._v("原型链继承的实现")])]),n("p",[n("code",[s._v("class")]),s._v(" 的原型继承语法（"),n("code",[s._v("extends")]),s._v("即可实现继承）较使用普通 JS 构造函数实现原型链继承"),n("strong",[s._v("逻辑更为清晰")]),s._v("。")]),n("p",[s._v("在使用普通 JS 构造函数实现的一般方法是：")]),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{attrs:{class:"token function"}},[s._v("Fn0")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{attrs:{class:"token comment"}},[s._v("/* do something */")]),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{attrs:{class:"token function"}},[s._v("Fn1")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{attrs:{class:"token comment"}},[s._v("/* do something */")]),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{attrs:{class:"token comment"}},[s._v("// 赋值对象字面量将直接导致 Fn1 原型被复写而非被修改，那么 Fn1 原型将丢失 constructor")]),s._v("\nFn1"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{attrs:{class:"token class-name"}},[s._v("Fn0")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nFn1"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function"}},[s._v("hasOwnProperty")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token string"}},[s._v("'constructor'")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n\n"),n("span",{attrs:{class:"token comment"}},[s._v("// 另一种实现方式如下，二者区别在于 Object.create() 创建出的新对象的 __proto__ 可设置为 null")]),s._v("\nFn1"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" Object"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function"}},[s._v("create")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Fn0"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype"),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{attrs:{class:"token comment"}},[s._v("/**\n * 1. 经过以上继承，Fn1.prototype.__proto__ === Fn0.prototype，此时，把 Fn1.prototype\n * 看作一个实例整体，即为 Fn0 的一个实例，那么 Fn1.prototype 就不存在 constructor 属性，那么\n * Fn1.prototype.constructor 访问的实际上是原型链上 Fn1.prototype 的原型对象 Fn0.prototype 的\n * constructor，即 Fn1 原型已丢失 constructor。\n */")]),s._v("\n\nFn1"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype "),n("span",{attrs:{class:"token keyword"}},[s._v("instanceof")]),s._v(" "),n("span",{attrs:{class:"token class-name"}},[s._v("Fn0")]),s._v(" "),n("span",{attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n\n"),n("span",{attrs:{class:"token comment"}},[s._v("// 极易忽略的一步，将 Fn1 原型的 constructor 指回原构造函数，重新定义 Fn1 函数原型的 constructor。")]),s._v("\n\n"),n("span",{attrs:{class:"token comment"}},[s._v("// 另外之前直接使用对象字面量重写了 Fn1 的原型，若直接重新定义 constructor，这些行为将导致 constructor 成为了可枚举属性，即 [[enumerable]] 为 true")]),s._v("\nObject"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function"}},[s._v("defineProperty")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Fn1"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype"),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{attrs:{class:"token string"}},[s._v("'constructor'")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  enumerable"),n("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{attrs:{class:"token boolean"}},[s._v("false")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  value"),n("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Fn1\n"),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br")])]),n("p",[s._v("在 "),n("code",[s._v("class")]),s._v(" 中只需要使用 "),n("code",[s._v("extends")]),s._v(" 即可实现原型链。从代码量和直观感受来看，"),n("code",[s._v("class")]),s._v(" 实现原型链继承更为"),n("strong",[s._v("简洁易读")]),s._v("，逻辑更为"),n("strong",[s._v("清晰")]),s._v("，尽管二者实现的内部逻辑都是相似的，即 "),n("code",[s._v("class")]),s._v(" 和 "),n("code",[s._v("extends")]),s._v(" 本质都只是一种"),n("strong",[s._v("语法糖")]),s._v("。")])])}],!1,null,null,null);t.default=e.exports}}]);