(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{170:function(s,t,n){"use strict";n.r(t);var a=n(0),e=Object(a.a)({},function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("div",{staticClass:"content"},[s._m(0),s._m(1),n("p",[s._v("前置知识：")]),n("ul",[n("li",[s._v("构造函数实例化时将生成一个"),n("strong",[s._v("新对象")]),s._v("（章节 - "),n("a",{attrs:{href:"https://lbwa.github.io/Front-End-Interview/js-essentials/js-prototype.html#%E6%8F%8F%E8%BF%B0-new-%E7%9A%84%E5%AE%9E%E4%BE%8B%E5%8C%96%E8%BF%87%E7%A8%8B",target:"_blank",rel:"noopener noreferrer"}},[s._v("描述 new 的实例化过程"),n("OutboundLink")],1),s._v("）")])]),s._m(2),s._m(3),s._m(4),n("p",[s._v("实例如下：")]),s._m(5),s._m(6),s._m(7),n("p",[s._v("实例如下：")]),s._m(8),s._m(9),s._m(10),s._m(11),s._m(12),s._m(13),s._m(14),s._m(15),s._m(16),s._m(17),s._m(18),n("p",[s._v("为了拓展性需要建立一个新的对象重写构造函数的原型对象，因为不对外暴露构造函数，只能通过这个新的对象作为实例化方法的一个属性（拓展接口）向外暴露，以达到拓展构造函数原型对象的目的。")]),s._m(19)])},[function(){var s=this.$createElement,t=this._self._c||s;return t("h1",{attrs:{id:"原型的实际应用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原型的实际应用","aria-hidden":"true"}},[this._v("#")]),this._v(" 原型的实际应用")])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[this._v("以下简要叙述 "),t("code",[this._v("jQuery")]),this._v(" 和 "),t("code",[this._v("zepto")]),this._v(" 中的原型应用。")])},function(){var s=this.$createElement,t=this._self._c||s;return t("h2",{attrs:{id:"jquery-和-zepto-中的原型应用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jquery-和-zepto-中的原型应用","aria-hidden":"true"}},[this._v("#")]),this._v(" jQuery 和 zepto 中的原型应用")])},function(){var s=this.$createElement,t=this._self._c||s;return t("ul",[t("li",[this._v("jQuery 中如何使用原型")])])},function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("window"),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{attrs:{class:"token comment"}},[s._v("// jQuery 是真正的构造函数 init 的一个实例")]),s._v("\n  "),n("span",{attrs:{class:"token comment"}},[s._v("// jQuery 在一开始就进行了实例化")]),s._v("\n  "),n("span",{attrs:{class:"token keyword"}},[s._v("const")]),s._v(" $ "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{attrs:{class:"token function-variable function"}},[s._v("jQuery")]),s._v(" "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("selector"),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{attrs:{class:"token class-name"}},[s._v("jQuery"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("fn"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("init")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("selector"),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{attrs:{class:"token comment"}},[s._v("// 重写构造函数 init 的实例的原型对象")]),s._v("\n  "),n("span",{attrs:{class:"token comment"}},[s._v("/**\n   * 1. 重写构造函数原型对象和经由 $.fn 来重写原对象的原因都是在于规范构造函数的功能拓展\n   * 2. 因为不对外暴露构造函数，那么外部拓展原型对象，只能通过 $.fn 来拓展\n   */")]),s._v("\n  jQuery"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("fn "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" jQuery"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{attrs:{class:"token comment"}},[s._v("// 因为 jQuery 变量是 jQuery.fn.init 的实例，那么此处指明了 $ 的 constructor 为 jQuery")]),s._v("\n    constructor"),n("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" jQuery"),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    css"),n("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" value"),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[s._v("`Simulate function named css`")])]),s._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    html"),n("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[s._v("`Simulate function named html`")])]),s._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{attrs:{class:"token comment"}},[s._v("// jQuery 库的构造函数 init（简化）")]),s._v("\n  "),n("span",{attrs:{class:"token comment"}},[s._v("// jQuery 在构造函数中进行类数组 nodeList 的转换，zepto 则是分离操作")]),s._v("\n  "),n("span",{attrs:{class:"token keyword"}},[s._v("const")]),s._v(" init "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" jQuery"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("fn"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function-variable function"}},[s._v("init")]),s._v(" "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("selector"),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{attrs:{class:"token keyword"}},[s._v("const")]),s._v(" dom "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" Array"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token keyword"}},[s._v("from")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("document"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function"}},[s._v("querySelectorAll")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("selector"),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{attrs:{class:"token keyword"}},[s._v("const")]),s._v(" len "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" dom "),n("span",{attrs:{class:"token operator"}},[s._v("?")]),s._v(" dom"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length "),n("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{attrs:{class:"token number"}},[s._v("0")]),s._v("\n    "),n("span",{attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{attrs:{class:"token number"}},[s._v("0")]),n("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{attrs:{class:"token operator"}},[s._v("<")]),s._v(" len"),n("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{attrs:{class:"token operator"}},[s._v("++")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{attrs:{class:"token keyword"}},[s._v("this")]),n("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" dom"),n("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{attrs:{class:"token keyword"}},[s._v("this")]),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" len\n    "),n("span",{attrs:{class:"token keyword"}},[s._v("this")]),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("selector "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" selector "),n("span",{attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),n("span",{attrs:{class:"token string"}},[s._v("''")]),s._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{attrs:{class:"token comment"}},[s._v("/**\n   * 1. 重写 jQuery 的构造函数 init 的原型对象，并且 constructor 指向 jQuery\n   * 2. 结合 jQuery.fn = jQuery.prototype 和 constructor: jQuery 可知，对于外部，\n   * jQuery 是构造函数，对于内部，真正的构造函数是 init。对于外部，所有的共享方法在\n   * jQuery 的原型对象上，对于内部，因为下面赋值，那么所有的的共享方法也在 init 的原型\n   * 对象上。也就是说实例 jQuery 与构造函数 init 共用一个原型对象\n   */")]),s._v("\n  init"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" jQuery"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("fn "),n("span",{attrs:{class:"token comment"}},[s._v("// jQuery.fn = jQuery.prototype")]),s._v("\n\n  window"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$ "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" window"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("jQuery "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" jQuery\n"),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("window"),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br")])])},function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[s._v("const")]),s._v(" ele "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{attrs:{class:"token function"}},[s._v("$")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token string"}},[s._v("'.target'")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nele"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function"}},[s._v("css")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token string"}},[s._v("'color'")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{attrs:{class:"token string"}},[s._v("'red'")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token comment"}},[s._v("// true")]),s._v("\nele"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function"}},[s._v("html")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n\n"),n("span",{attrs:{class:"token comment"}},[s._v("// 在 ele 的原型链上是否存在 css 和 html 属性")]),s._v("\n"),n("span",{attrs:{class:"token string"}},[s._v("'css'")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("in")]),s._v(" ele "),n("span",{attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n"),n("span",{attrs:{class:"token string"}},[s._v("'html'")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("in")]),s._v(" ele "),n("span",{attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n\n"),n("span",{attrs:{class:"token comment"}},[s._v("// zepto.js 中是与 $.fn 全等")]),s._v("\nele"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("__proto__ "),n("span",{attrs:{class:"token operator"}},[s._v("===")]),s._v(" $"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype "),n("span",{attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n"),n("span",{attrs:{class:"token comment"}},[s._v("// ele 是构造函数 jQuery 对象（别名为 $）的实例")]),s._v("\nele "),n("span",{attrs:{class:"token keyword"}},[s._v("instanceof")]),s._v(" "),n("span",{attrs:{class:"token class-name"}},[s._v("jQuery")]),s._v(" "),n("span",{attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n\nele"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function"}},[s._v("hasOwnProperty")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token string"}},[s._v("'css'")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token comment"}},[s._v("// false")]),s._v("\nele"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function"}},[s._v("hasOwnProperty")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token string"}},[s._v("'html'")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n\n"),n("span",{attrs:{class:"token comment"}},[s._v("// css 是 jQuery 构造函数的原型方法")]),s._v("\nele"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("__proto__"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function"}},[s._v("hasOwnProperty")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token string"}},[s._v("'css'")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n\n"),n("span",{attrs:{class:"token comment"}},[s._v("// html 是 jQuery 构造函数的原型方法")]),s._v("\nele"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("__proto__"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function"}},[s._v("hasOwnProperty")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token string"}},[s._v("'html'")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n")])]),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("ul",[t("li",[this._v("zepto.js 如何使用原型")])])},function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("window"),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{attrs:{class:"token keyword"}},[s._v("const")]),s._v(" zepto "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{attrs:{class:"token comment"}},[s._v("// zepto.js 构造函数，实例化后得到一个对象")]),s._v("\n  "),n("span",{attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{attrs:{class:"token constant"}},[s._v("Z")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dom"),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" selector"),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{attrs:{class:"token keyword"}},[s._v("const")]),s._v(" len "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" dom "),n("span",{attrs:{class:"token operator"}},[s._v("?")]),s._v(" dom"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length "),n("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{attrs:{class:"token number"}},[s._v("0")]),s._v("\n    "),n("span",{attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{attrs:{class:"token number"}},[s._v("0")]),n("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{attrs:{class:"token operator"}},[s._v("<")]),s._v(" len"),n("span",{attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{attrs:{class:"token operator"}},[s._v("++")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{attrs:{class:"token comment"}},[s._v("// this 即为 $(selector) 的返回结果（一个对象）")]),s._v("\n      "),n("span",{attrs:{class:"token keyword"}},[s._v("this")]),n("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" dom"),n("span",{attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{attrs:{class:"token keyword"}},[s._v("this")]),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" len\n    "),n("span",{attrs:{class:"token keyword"}},[s._v("this")]),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("selector "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" selector "),n("span",{attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),n("span",{attrs:{class:"token string"}},[s._v("''")]),s._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  zepto"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function-variable function"}},[s._v("Z")]),s._v(" "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dom"),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" selector"),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{attrs:{class:"token comment"}},[s._v("/**\n     * 1. 关键点：与 jQuery 的不同之处，Zepto 在此处实例化\n     * 2. 不同于 jQuery 中直接暴露构造函数 jQuery（别名 $），zepto.js 中 $ 并非构造\n     * 函数对象，而是在内部构实现构造函数 Z，因为后文有 Z.prototype = $.fn 直接重写了\n     * Z 的原型对象，那么先前的 constructor 属性已经丢失，且重写后的原型中指定\n     * constructor 为 zepto.Z，那么外部是无法访问构造函数 Z 的\n     */")]),s._v("\n    "),n("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{attrs:{class:"token class-name"}},[s._v("Z")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dom"),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" selector"),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{attrs:{class:"token comment"}},[s._v("// zepto 将变量 dom 由类数组 nodeList 转换为真正的数组的操作与构造函数是分离的，")]),s._v("\n  "),n("span",{attrs:{class:"token comment"}},[s._v("// jQuery 则都在构造函数中进行")]),s._v("\n  zepto"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function-variable function"}},[s._v("init")]),s._v(" "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("selector"),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{attrs:{class:"token comment"}},[s._v("// 此处为 Zepto.js 中的逻辑简化")]),s._v("\n    "),n("span",{attrs:{class:"token comment"}},[s._v("// const slice = Array.prototype.slice")]),s._v("\n    "),n("span",{attrs:{class:"token comment"}},[s._v("// const dom = slice.call(document.querySelectorAll(selector))")]),s._v("\n    "),n("span",{attrs:{class:"token keyword"}},[s._v("const")]),s._v(" dom "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" Array"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token keyword"}},[s._v("from")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("document"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function"}},[s._v("querySelectorAll")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("selector"),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" zepto"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token constant"}},[s._v("Z")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dom"),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" selector"),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{attrs:{class:"token comment"}},[s._v("// $(selector) 本质就是构造函数 Z 的一个实例")]),s._v("\n  "),n("span",{attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),n("span",{attrs:{class:"token function-variable function"}},[s._v("$")]),s._v(" "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("selector"),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" zepto"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function"}},[s._v("init")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("selector"),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{attrs:{class:"token comment"}},[s._v("// Zepto 原型对象")]),s._v("\n  "),n("span",{attrs:{class:"token comment"}},[s._v("/**\n   * 1. 重写构造函数原型对象和经由 $.fn 来重写原对象的原因都是在于规范构造函数的功能拓展\n   * 2. 因为不对外暴露构造函数，那么外部拓展原型对象，只能通过 $.fn 来拓展\n   */")]),s._v("\n  $"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("fn "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{attrs:{class:"token comment"}},[s._v("// constructor: zepto.Z 呼应后面的 zepto.Z.prototype = $.fn")]),s._v("\n    constructor"),n("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" zepto"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token constant"}},[s._v("Z")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{attrs:{class:"token comment"}},[s._v("// Z.prototype.constructor 将返回 zepto.Z 而不是 Z，也不是对外接口 $")]),s._v("\n    css"),n("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" value"),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[s._v("`Simulate function named css`")])]),s._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    html"),n("span",{attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{attrs:{class:"token template-string"}},[n("span",{attrs:{class:"token string"}},[s._v("`Simulate function named html`")])]),s._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),n("span",{attrs:{class:"token comment"}},[s._v("// Z 的显式原型对象对外暴露的接口是 $.fn")]),s._v("\n  "),n("span",{attrs:{class:"token comment"}},[s._v("// 重写构造函数 Z 的原型")]),s._v("\n  "),n("span",{attrs:{class:"token comment"}},[s._v("// $.fn.constructor 将返回 zepto.Z 函数，因为 $.fn 中已经指定 constructor")]),s._v("\n  zepto"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token constant"}},[s._v("Z")]),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{attrs:{class:"token constant"}},[s._v("Z")]),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" $"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("fn\n\n  "),n("span",{attrs:{class:"token comment"}},[s._v("// 内部 zepto 对象对外暴露的接口是 $.zepto")]),s._v("\n  $"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("zepto "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" zepto\n  window"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$ "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" $\n"),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),s._v("window"),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br")])])},function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[s._v("\n"),n("span",{attrs:{class:"token comment"}},[s._v("// $(selector) 返回一个内部构造函数 Z 的实例其中包含选择器的 结果项，长度，选择器 组成的类数组对象")]),s._v("\n"),n("span",{attrs:{class:"token keyword"}},[s._v("const")]),s._v(" ele "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{attrs:{class:"token function"}},[s._v("$")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token string"}},[s._v("'.target'")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token comment"}},[s._v("// { 0: div.target, length: 1, selector: '.target' }")]),s._v("\nele"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function"}},[s._v("css")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token comment"}},[s._v("// Simulate function named css")]),s._v("\nele"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function"}},[s._v("html")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token comment"}},[s._v("// Simulate function named html")]),s._v("\n\n"),n("span",{attrs:{class:"token comment"}},[s._v("// 在 ele 的原型链上是否存在 css 和 html 属性")]),s._v("\n"),n("span",{attrs:{class:"token string"}},[s._v("'css'")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("in")]),s._v(" ele "),n("span",{attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n"),n("span",{attrs:{class:"token string"}},[s._v("'html'")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("in")]),s._v(" ele "),n("span",{attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n\n"),n("span",{attrs:{class:"token comment"}},[s._v("// 不同于 jQuery，zepto.js 中 $ 并非构造函数对象")]),s._v("\n"),n("span",{attrs:{class:"token comment"}},[s._v("// 可对比使用 jQuery 时，ele.__proto__ === $.prototype 为 true")]),s._v("\n"),n("span",{attrs:{class:"token comment"}},[s._v("// 判断 $.fn 是否指向构造函数 Z 的原型对象")]),s._v("\nele"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("__proto__ "),n("span",{attrs:{class:"token operator"}},[s._v("===")]),s._v(" $"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("fn "),n("span",{attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n\n"),n("span",{attrs:{class:"token comment"}},[s._v("// Z 实例本身不具有 css 和 html 等方法")]),s._v("\nele"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function"}},[s._v("hasOwnProperty")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token string"}},[s._v("'css'")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token comment"}},[s._v("// false")]),s._v("\nele"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function"}},[s._v("hasOwnProperty")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token string"}},[s._v("'html'")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n\n"),n("span",{attrs:{class:"token comment"}},[s._v("// 构造函数 Z 的原型对象上有所有实例共享的方法 css 和 html")]),s._v("\nele"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("__proto__"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function"}},[s._v("hasOwnProperty")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token string"}},[s._v("'css'")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token comment"}},[s._v("// true")]),s._v("\nele"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("__proto__"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function"}},[s._v("hasOwnProperty")]),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token string"}},[s._v("'html'")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n")])]),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[this._v("#")]),this._v(" 总结")])},function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ul",[n("li",[n("p",[s._v("二者实现原型链应用方面的差异")]),n("ul",[n("li",[n("p",[n("code",[s._v("zepto.js")]),s._v(" 在外部无法访问构造函数 "),n("code",[s._v("Z")]),s._v("，只能访问到内部实例化方法 "),n("code",[s._v("zepto.Z")]),s._v("（关键点在于重写原型时的 "),n("code",[s._v("constructor")]),s._v(" 属性）")])]),n("li",[n("p",[n("code",[s._v("jQuery")]),s._v(" 向外部暴露与真正构造函数 "),n("code",[s._v("init")]),s._v(" 共用一个原型对象的实例对象 "),n("code",[s._v("jQuery")]),s._v(" 接口，并非暴露真正构造函数 "),n("code",[s._v("init")])])])])]),n("li",[n("p",[s._v("二者实现原型链应用方面的共同点")]),n("ul",[n("li",[s._v("直接在内部以"),n("strong",[s._v("对象字面量")]),s._v("形式（对象字面量是"),n("strong",[s._v("重写")]),s._v("原型对象，原来的原型对象将丢失）重写内部真正构造函数的原型对象，该原型对象包含了所有实例共有的一些方法（如 DOM 操作等）。")])])])])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[this._v("在调用二者相同的实例化方法 "),t("code",[this._v("$(selector)")]),this._v(" 后，此时的实例就已经可以使用内部构造函数的原型方法了。")])},function(){var s=this.$createElement,t=this._self._c||s;return t("h1",{attrs:{id:"原型对象的拓展性（插件机制）-——-重要"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原型对象的拓展性（插件机制）-——-重要","aria-hidden":"true"}},[this._v("#")]),this._v(" 原型对象的拓展性（插件机制） —— 重要")])},function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("p",[s._v("（以下 "),n("code",[s._v("$")]),s._v(" 指代在 "),n("code",[s._v("jQuery")]),s._v(" 中的 "),n("code",[s._v("jQuery")]),s._v(" 和 "),n("code",[s._v("$")]),s._v("，在 zepto.js 中的 "),n("code",[s._v("$")]),s._v("）")])},function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[s._v("// 以 jQuery 为例，zepto.js 同理")]),s._v("\njQuery"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("fn "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" jQuery"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n"),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{attrs:{class:"token comment"}},[s._v("// jQuery 中拓展插件")]),s._v("\njQuery"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("fn"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{attrs:{class:"token function-variable function"}},[s._v("getNodeName")]),s._v(" "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{attrs:{class:"token keyword"}},[s._v("this")]),n("span",{attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{attrs:{class:"token number"}},[s._v("0")]),n("span",{attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("nodeName\n"),n("span",{attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{attrs:{class:"token comment"}},[s._v("// 将拓展后的原型对象重写为内部构造函数 init 的原型对象")]),s._v("\n"),n("span",{attrs:{class:"token comment"}},[s._v("// 在实例化 init 后（即调用 $(selector)），即可使用插件")]),s._v("\ninit"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype "),n("span",{attrs:{class:"token operator"}},[s._v("=")]),s._v(" jQuery"),n("span",{attrs:{class:"token punctuation"}},[s._v(".")]),s._v("fn\n")])]),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[this._v("二者将新的原型对象先赋值给 "),t("code",[this._v("$.fn")]),this._v(" 的原因就是在于赋值后可拓展插件，即 "),t("code",[this._v("$.fn")]),this._v(" 相当于是对外可"),t("strong",[this._v("拓展插件的接口")]),this._v("。")])},function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ul",[n("li",[n("p",[s._v("通过 "),n("code",[s._v("$.fn")]),s._v(" 拓展插件而不直接重写构造函数原型的原因（优势）")]),n("ul",[n("li",[n("p",[s._v("在模块外部二者均未暴露内部构造函数，只暴露了实例化方法 "),n("code",[s._v("$")]),s._v(" 变量，保证了对全局变量的最小影响，同时又不影响拓展构造函数原型对象。而且外部也不用关心内部的构造函数的实现。（减小污染）")])]),n("li",[n("p",[s._v("将拓展插件功能统一在 "),n("code",[s._v("$.fn")]),s._v(" 接口上，方便管理（集中接口）")])])])])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h2",{attrs:{id:"总结-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结-2","aria-hidden":"true"}},[this._v("#")]),this._v(" 总结")])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[this._v("原型对象的拓展性对后续的库的拓展性开发，SDK 封装等都是非常重要的一个"),t("strong",[this._v("核心点")]),this._v("。")])},function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ul",[n("li",[n("p",[s._v("如何拓展库的原型对象（定义库的拓展性）？")]),n("ul",[n("li",[n("p",[s._v("内部实现：在模块内部中，在重写构造函数对象之前，先将新的原型对象赋值给 "),n("code",[s._v("$.extend")]),s._v(" 接口，再由 "),n("code",[s._v("$.extend")]),s._v(" 重写内部构造函数的原型对象。这样保证了在重写之前就已经拓展了库的插件。")])]),n("li",[n("p",[s._v("外部体现：对外"),n("strong",[s._v("只暴露")]),s._v("实例化方法（如 "),n("code",[s._v("jQuery")]),s._v(" 中暴露 "),n("code",[s._v("$(selector)")]),s._v(" 实例方法）的变量 "),n("code",[s._v("$")]),s._v("，以该变量的某一属性定义为插件接口（此处自定义 "),n("code",[s._v("$.extend")]),s._v(" 指代该接口），通过该外部接口来修改内部构造函数原型对象，同时保证构造函数的私有化。")])])])])])}],!1,null,null,null);t.default=e.exports}}]);